AWSTemplateFormatVersion: ‘2010-09-09’
Description: Create an EC2 instance with Jenkins, AWS CLI, and CloudFormation role #this template create an ec2 for jenkins server with AWS CLI, Cloudformation
Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    ConstraintDescription: Must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  VpcId:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id
    Default: vpc-01036f830afb1116a
  SubnetId:
    Description: Subnet ID
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0b350ad62701885c7
Resources:
  # Attach created role to an instance profile
  CloudFormationInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref CloudFormationRole
  # IAM role with granular permissions (customize based on your needs)
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: ‘2012-10-17’
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AWSCloudFormationFullAccess
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      SecurityGroupIngress:
        # Replace with your authorized IP ranges for production
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-0c7217cdde317cfec
      SecurityGroupIds:
        - !GetAtt EC2SecurityGroup.GroupId
      SubnetId: !Ref SubnetId
      UserData:
        Fn::Base64: |
          #!/bin/bash
          apt update
          apt install fontconfig openjdk-17-jre -y
          wget -O /usr/share/keyrings/jenkins-keyring.asc \
            https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
          echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
            https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
            /etc/apt/sources.list.d/jenkins.list > /dev/null
          apt-get update
          apt-get install jenkins -y
          # Optimized AWS CLI installation
          apt install -y unzip python3-pip
          pip3 install awscli
          sudo aws configure
      # IamInstanceProfile:
      #  Arn: !ImportValue ‘Dev-CloudFormationInstanceProfile’
Outputs:
  InstanceId:
    Description: The Instance ID of the newly created EC2 instance
    Value: !Ref EC2Instance
  PublicDnsName:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt EC2Instance.PublicDnsName
  PublicIp:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt EC2Instance.PublicIp